1 단계 : 승인 매개 변수 설정
첫 번째 단계는 승인 요청을 만드는 것입니다. 이 요청은 애플리케이션을 식별하는 매개 변수를 설정하고 사용자가 애플리케이션에 부여 할 권한을 정의합니다.

OAuth 2.0 인증 및 승인에 Google 클라이언트 라이브러리를 사용하는 경우 이러한 매개 변수를 정의하는 개체를 만들고 구성합니다.
Google OAuth 2.0 엔드 포인트를 직접 호출하는 경우 URL을 생성하고 해당 URL에 매개 변수를 설정합니다.
아래 탭은 웹 서버 애플리케이션에 지원되는 인증 매개 변수를 정의합니다. 언어 별 예에서는 클라이언트 라이브러리 또는 권한 부여 라이브러리를 사용하여 해당 매개 변수를 설정하는 개체를 구성하는 방법도 보여줍니다.

PHP
파이썬
루비
HTTP / REST
Google의 OAuth 2.0 엔드 포인트는 https://accounts.google.com/o/oauth2/v2/auth 있습니다. 이 끝점은 HTTPS를 통해서만 액세스 할 수 있습니다. 일반 HTTP 연결은 거부됩니다.

Google 인증 서버는 웹 서버 애플리케이션에 대해 다음 쿼리 문자열 매개 변수를 지원합니다.

매개 변수
client_id	필수
애플리케이션의 클라이언트 ID입니다. 이 값은 API Console Credentials page에서 찾을 수 있습니다.

redirect_uri	필수
사용자가 인증 흐름을 완료 한 후 API 서버가 사용자를 리디렉션하는 위치를 결정합니다. 이 값은 클라이언트의 API Console Credentials page에서 구성한 OAuth 2.0 클라이언트에 대해 승인 된 리디렉션 URI 중 하나와 정확히 일치해야합니다. 이 값이 제공된 client_id 대해 승인 된 리디렉션 URI와 일치하지 않으면 redirect_uri_mismatch 오류가 발생합니다.

http 또는 https 체계, 대소 문자 및 후행 슬래시 ( ' / ')가 모두 일치해야합니다.

response_type	필수
Google OAuth 2.0 엔드 포인트가 인증 코드를 반환하는지 여부를 결정합니다.

매개 변수 값을 웹 서버 애플리케이션 용 code 로 설정하십시오.

scope	필수
애플리케이션이 사용자를 대신하여 액세스 할 수있는 리소스를 식별하는 공백으로 구분 된 범위 목록입니다. 이 값은 Google이 사용자에게 표시하는 동의 화면을 알려줍니다.

범위를 사용하면 애플리케이션이 필요한 리소스에 대한 액세스 만 요청할 수 있으며 사용자는 애플리케이션에 부여하는 액세스 양을 제어 할 수 있습니다. 따라서 요청 된 범위의 수와 사용자 동의를 얻을 가능성 사이에는 반비례 관계가 있습니다.

가능한 경우 애플리케이션에서 컨텍스트에서 권한 부여 범위에 대한 액세스를 요청하는 것이 좋습니다. 증분 인증을 통해 컨텍스트에서 사용자 데이터에 대한 액세스를 요청하면 사용자가 애플리케이션에서 요청하는 액세스가 필요한 이유를 더 쉽게 이해할 수 있습니다.

access_type	추천
사용자가 브라우저에 없을 때 애플리케이션이 액세스 토큰을 새로 고칠 수 있는지 여부를 나타냅니다. 유효한 매개 변수 값은 기본값 인 online 과 offline 입니다.

사용자가 브라우저에 없을 때 애플리케이션에서 액세스 토큰을 새로 고쳐야하는 경우 값을 offline 설정하십시오. 이 문서의 뒷부분에서 설명하는 액세스 토큰을 새로 고치는 방법입니다. 이 값은 애플리케이션이 처음으로 인증 코드를 토큰으로 교환 할 때 새로 고침 토큰 과 액세스 토큰을 반환하도록 Google 인증 서버에 지시합니다.

state	추천
애플리케이션이 권한 요청과 권한 서버의 응답 사이의 상태를 유지하기 위해 사용하는 문자열 값을 지정합니다. 서버는 사용자가 애플리케이션의 액세스 요청에 동의하거나 거부 한 후 redirect_uri 의 URL 쿼리 구성 요소 ( ? )에 name=value 쌍으로 전송 한 정확한 값을 반환합니다.

이 매개 변수는 사용자를 애플리케이션의 올바른 리소스로 안내하고, nonce를 전송하고, 교차 사이트 요청 위조를 완화하는 등 여러 목적으로 사용할 수 있습니다. redirect_uri 를 추측 할 수 있으므로 state 값을 사용하면 들어오는 연결이 인증 요청의 결과라는 확신을 높일 수 있습니다. 임의의 문자열을 생성하거나 쿠키의 해시 또는 클라이언트의 상태를 캡처하는 다른 값을 인코딩하는 경우 요청과 응답이 동일한 브라우저에서 시작되었는지 추가로 확인하여 교차 사이트와 같은 공격에 대한 보호를 제공하기 위해 응답을 검증 할 수 있습니다. 위조 요청. state 토큰을 만들고 확인하는 방법에 대한 예제는 OpenID Connect 설명서를 참조하십시오.

include_granted_scopes	선택 과목
애플리케이션이 증분 인증을 사용하여 컨텍스트의 추가 범위에 대한 액세스를 요청할 수 있습니다. 이 매개 변수의 값을 true 설정하고 권한 부여 요청이 부여 된 경우 새 액세스 토큰은 사용자가 이전에 애플리케이션 액세스 권한을 부여한 모든 범위도 포함합니다. 예시는 증분 인증 섹션을 참조하세요.

login_hint	선택 과목
애플리케이션이 인증하려는 사용자를 알고있는 경우이 매개 변수를 사용하여 Google 인증 서버에 힌트를 제공 할 수 있습니다. 서버는 힌트를 사용하여 로그인 양식의 이메일 필드를 미리 채우거나 적절한 다중 로그인 세션을 선택하여 로그인 흐름을 단순화합니다.

매개 변수 값을 사용자의 Google ID와 동일한 이메일 주소 또는 sub 식별자로 설정합니다.

prompt	선택 과목
사용자에게 표시 할 공백으로 구분되고 대소 문자를 구분하는 프롬프트 목록입니다. 이 매개 변수를 지정하지 않으면 프로젝트에서 처음으로 액세스를 요청할 때만 사용자에게 메시지가 표시됩니다. 자세한 내용은 재동의 요청 을 참조하십시오.

가능한 값은 다음과 같습니다.

none	인증 또는 동의 화면을 표시하지 마십시오. 다른 값과 함께 지정하면 안됩니다.
consent	사용자에게 동의를 요청합니다.
select_account	사용자에게 계정을 선택하라는 메시지를 표시합니다.



민감하지 않은 범위
API
범위
사용자에게 표시되는 설명
.../auth/userinfo.email	기본 Google 계정의 이메일 주소 확인	
.../auth/userinfo.profile	개인정보(공개로 설정한 개인정보 포함) 보기	
openid	Google에서 내 개인 정보를 나와 연결	
 민감한 범위
민감한 범위는 비공개 사용자 데이터에 대한 액세스를 요청하는 범위입니다.

API
범위
사용자에게 표시되는 설명
BigQuery API	.../auth/bigquery	Google BigQuery에서 데이터를 보고 관리합니다.	
BigQuery API	.../auth/cloud-platform	내 Google Cloud Platform 데이터 확인, 수정, 구성, 삭제	
BigQuery API	.../auth/bigquery.readonly	Google BigQuery에서 데이터를 봅니다.	
BigQuery API	.../auth/cloud-platform.read-only	Google Cloud Platform 서비스 전반에서 데이터 조회	
BigQuery API	.../auth/devstorage.full_control	Google 클라우드 저장소에서 데이터 및 권한 관리	
BigQuery API	.../auth/devstorage.read_only	Google 클라우드 저장소에서 데이터 조회	
BigQuery API	.../auth/devstorage.read_write	Google 클라우드 저장소에서 데이터 관리	






https://accounts.google.com/o/oauth2/v2/auth?
 scope=https%3A//www.googleapis.com/auth/drive.metadata.readonly&
 access_type=offline&
 include_granted_scopes=true&
 response_type=code&
 state=state_parameter_passthrough_value&
 redirect_uri=https%3A//oauth2.example.com/code&
 client_id=client_id




POST /token HTTP/1.1
Host: oauth2.googleapis.com
Content-Type: application/x-www-form-urlencoded

code=4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
client_id=your_client_id&
client_secret=your_client_secret&
redirect_uri=https%3A//oauth2.example.com/code&
grant_type=authorization_code






{
  "access_token": "1/fFAGRNJru1FTz70BzhT3Zg",
  "expires_in": 3920,
  "token_type": "Bearer",
  "scope": "https://www.googleapis.com/auth/drive.metadata.readonly",
  "refresh_token": "1//xEoDL4iW3cxlI7yDbSRFYNG01kVKM2C-259HOF2aQbI"
}